# NanoBrain Global Configuration
# This file contains global settings for the NanoBrain framework including API keys for commercial AI models

# Framework Information
framework:
  name: "NanoBrain"
  version: "1.0.0"
  description: "Event-driven AI workflow framework"
  
# API Keys for Commercial AI Models
# Note: These should be set as environment variables or provided via secure configuration
api_keys:
  # OpenAI API Configuration
  openai:
    api_key: "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"
    organization: "${OPENAI_ORG_ID}"  # Optional
    base_url: "https://api.openai.com/v1"  # Default OpenAI endpoint
    
  # Anthropic Claude API Configuration
  anthropic:
    api_key: "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"
    base_url: "https://api.anthropic.com"
    
  # Google AI (Gemini) API Configuration
  google:
    api_key: "${GOOGLE_AI_API_KEY}"
    project_id: "${GOOGLE_PROJECT_ID}"  # For Vertex AI
    base_url: "https://generativelanguage.googleapis.com"
    
  # Azure OpenAI Configuration
  azure_openai:
    api_key: "${AZURE_OPENAI_API_KEY}"
    endpoint: "${AZURE_OPENAI_ENDPOINT}"
    api_version: "2024-02-15-preview"
    
  # Cohere API Configuration
  cohere:
    api_key: "${COHERE_API_KEY}"
    base_url: "https://api.cohere.ai"
    
  # Hugging Face API Configuration
  huggingface:
    api_key: "${HUGGINGFACE_API_KEY}"
    base_url: "https://api-inference.huggingface.co"
    
  # Replicate API Configuration
  replicate:
    api_key: "${REPLICATE_API_TOKEN}"
    base_url: "https://api.replicate.com"
    
  # Together AI Configuration
  together:
    api_key: "${TOGETHER_API_KEY}"
    base_url: "https://api.together.xyz"
    
  # Mistral AI Configuration
  mistral:
    api_key: "${MISTRAL_API_KEY}"
    base_url: "https://api.mistral.ai"

# Default Model Configurations
default_models:
  # Text Generation Models
  text_generation:
    openai: "gpt-4"
    anthropic: "claude-3-sonnet-20240229"
    google: "gemini-pro"
    azure_openai: "gpt-4"
    cohere: "command-r-plus"
    mistral: "mistral-large-latest"
    
  # Chat Models
  chat:
    openai: "gpt-3.5-turbo"
    anthropic: "claude-3-haiku-20240307"
    google: "gemini-pro"
    azure_openai: "gpt-35-turbo"
    
  # Embedding Models
  embeddings:
    openai: "text-embedding-3-small"
    cohere: "embed-english-v3.0"
    huggingface: "sentence-transformers/all-MiniLM-L6-v2"
    
  # Image Generation Models
  image_generation:
    openai: "dall-e-3"
    replicate: "stability-ai/stable-diffusion"
    
  # Code Generation Models
  code_generation:
    openai: "gpt-4"
    anthropic: "claude-3-sonnet-20240229"
    together: "codellama/CodeLlama-34b-Instruct-hf"

# Model Provider Settings
providers:
  openai:
    timeout: 60
    max_retries: 3
    retry_delay: 1.0
    
  anthropic:
    timeout: 60
    max_retries: 3
    retry_delay: 1.0
    max_tokens: 4096
    
  google:
    timeout: 60
    max_retries: 3
    retry_delay: 1.0
    
  azure_openai:
    timeout: 60
    max_retries: 3
    retry_delay: 1.0
    
  cohere:
    timeout: 60
    max_retries: 3
    retry_delay: 1.0
    
  huggingface:
    timeout: 120  # Longer timeout for inference API
    max_retries: 3
    retry_delay: 2.0
    
  replicate:
    timeout: 300  # Longer timeout for image generation
    max_retries: 3
    retry_delay: 5.0
    
  together:
    timeout: 60
    max_retries: 3
    retry_delay: 1.0
    
  mistral:
    timeout: 60
    max_retries: 3
    retry_delay: 1.0

# Environment Variable Mappings
# These define which environment variables should be set for each provider
env_mappings:
  openai:
    - OPENAI_API_KEY
    - OPENAI_ORG_ID
    - OPENAI_BASE_URL
    
  anthropic:
    - ANTHROPIC_API_KEY
    - ANTHROPIC_BASE_URL
    
  google:
    - GOOGLE_AI_API_KEY
    - GOOGLE_PROJECT_ID
    - GOOGLE_APPLICATION_CREDENTIALS  # For service account auth
    
  azure_openai:
    - AZURE_OPENAI_API_KEY
    - AZURE_OPENAI_ENDPOINT
    - AZURE_OPENAI_API_VERSION
    
  cohere:
    - COHERE_API_KEY
    - COHERE_BASE_URL
    
  huggingface:
    - HUGGINGFACE_API_KEY
    - HUGGINGFACE_BASE_URL
    
  replicate:
    - REPLICATE_API_TOKEN
    - REPLICATE_BASE_URL
    
  together:
    - TOGETHER_API_KEY
    - TOGETHER_BASE_URL
    
  mistral:
    - MISTRAL_API_KEY
    - MISTRAL_BASE_URL

# Security Settings
security:
  # Whether to validate API keys on startup
  validate_keys_on_startup: false
  
  # Whether to log API key validation (keys will be masked)
  log_key_validation: true
  
  # Whether to require at least one valid API key
  require_valid_key: false
  
  # Mask API keys in logs (show only first 4 and last 4 characters)
  mask_keys_in_logs: true

# Logging Configuration
logging:
  # Logging mode: "console", "file", or "both"
  # - "console": Log only to console/terminal (no file output)
  # - "file": Log only to files (no console output, silent mode)
  # - "both": Log to both console and files (default behavior)
  mode: "both"
  
  # Log level for configuration loading
  level: "INFO"
  
  # Whether to log successful configuration loading
  log_config_loading: true
  
  # Whether to log environment variable loading
  log_env_loading: false  # Set to false to avoid logging sensitive info
  
  # Whether to log missing API keys as warnings
  log_missing_keys: true
  
  # File logging specific settings (when mode is "file" or "both")
  file:
    # Base directory for log files
    base_directory: "logs"
    
    # Whether to create timestamped session directories
    use_session_directories: true
    
    # Log file rotation settings
    max_file_size_mb: 10
    backup_count: 5
    
    # Whether to compress old log files
    compress_old_logs: true
  
  # Console logging specific settings (when mode is "console" or "both")
  console:
    # Whether to use colored output (if supported)
    use_colors: true
    
    # Whether to show timestamps in console output
    show_timestamps: true
    
    # Console log format
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Development Settings
development:
  # Whether to use mock clients when API keys are missing
  use_mock_clients: true
  
  # Whether to validate configuration schema
  validate_schema: true
  
  # Whether to allow override of configuration via environment variables
  allow_env_override: true 