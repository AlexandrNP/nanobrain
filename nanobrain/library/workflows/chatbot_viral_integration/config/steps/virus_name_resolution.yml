name: Enhanced Virus Name Resolution
description: Ultra-high-confidence virus synonym detection with multi-agent processing
class: nanobrain.library.workflows.chatbot_viral_integration.steps.virus_name_resolution_step.EnhancedVirusNameResolutionStep

# Framework settings
config:
  name: enhanced_virus_name_resolution
  description: Ultra-high-confidence virus synonym detection with species validation
  debug_mode: false
  enable_logging: true
  log_data_transfers: true

# UPDATED: Input data unit with class field
input_configs:
  query_input:
    class: nanobrain.core.data_unit.DataUnitMemory
    name: query_input
    description: "Query classification result for enhanced virus name resolution"
    persistent: false

# UPDATED: Output data unit with class field  
output_config:
  class: nanobrain.core.data_unit.DataUnitMemory
  name: resolution_result
  description: "Ultra-high-confidence synonyms and species validation criteria"
  persistent: false

# ENHANCED: Multi-agent configuration for ultra-precision processing
query_analysis_agent:
  config_file: "nanobrain/library/agents/specialized/config/enhanced_query_analysis_agent.yml"

synonym_detection_agent:
  config_file: "nanobrain/library/agents/specialized/config/virus_synonym_detection_agent.yml"

# ENHANCED: Ultra-high-confidence cache configuration
cache_config:
  enable_caching: true
  cache_directory: "data/ultra_virus_resolution_cache"
  cache_ttl_hours: 24
  confidence_threshold: 0.9  # Ultra-high-confidence threshold
  virus_specific: true

# CRITICAL: Ultra-high-confidence settings
confidence_threshold: 0.9  # Minimum confidence for accepting results
ultra_precision_mode: true
contamination_prevention: true

# Enhanced prompt templates for multi-agent processing
virus_extraction_prompt: |
  Analyze this user query and extract any virus species mentioned with ultra-precision:
  
  Query: "{user_query}"
  
  CRITICAL REQUIREMENTS:
  1. Extract ONLY explicitly mentioned virus species
  2. Do NOT infer virus species from general context
  3. Provide detailed confidence assessment
  4. Flag potential contamination risks
  
  Return JSON format:
  {{
    "virus_species": "exact virus species name or null if none clearly mentioned",
    "confidence": 0.0-1.0,
    "extraction_reasoning": "detailed explanation",
    "contamination_risk": "none|low|medium|high"
  }}

synonym_detection_prompt: |
  Generate ultra-high-confidence synonyms for this virus species with comprehensive validation:
  
  Virus Species: "{virus_species}"
  
  ULTRA-HIGH-CONFIDENCE REQUIREMENTS:
  1. Include ONLY synonyms with confidence ≥ 0.9
  2. Provide individual confidence scores for each synonym
  3. Include comprehensive taxonomic validation data
  4. Generate species validation criteria for CSV matching
  5. Flag any potential contamination risks
  
  SYNONYM CATEGORIES TO CONSIDER:
  - ICTV official nomenclature (highest priority)
  - Standard scientific abbreviations (e.g., CHIKV, EEEV)
  - Database-specific naming variations (NCBI, BV-BRC, UniProt)
  - Well-established historical names
  - Regional naming variations (if confidence ≥ 0.9)
  
  Return comprehensive JSON with all validation metadata:
  {{
    "canonical_name": "official ICTV standard name",
    "ultra_high_confidence_synonyms": ["list of synonyms with confidence ≥ 0.9"],
    "confidence_scores": {{
      "overall": 0.0-1.0,
      "synonym1": 0.0-1.0,
      "synonym2": 0.0-1.0
    }},
    "taxonomic_lineage": {{
      "genus": "genus name",
      "family": "family name",
      "order": "order name"
    }},
    "species_validation_criteria": {{
      "primary_species": "canonical virus name",
      "acceptable_variations": ["list of ultra-high-confidence synonyms"],
      "taxonomic_constraints": {{
        "genus": "genus name",
        "family": "family name",
        "order": "order name"
      }},
      "validation_rules": {{
        "exact_match_required": true,
        "case_sensitive": false,
        "allow_abbreviations": true,
        "require_species_confirmation": true
      }},
      "contamination_prevention": {{
        "reject_on_genus_mismatch": true,
        "require_species_confirmation": true,
        "cross_validation_required": true,
        "zero_contamination_tolerance": 0.0
      }}
    }},
    "validation_metadata": {{
      "ictv_compliance": true/false,
      "contamination_risk_assessment": "ultra_low|low|medium|high",
      "taxonomic_confidence": 0.0-1.0,
      "manual_validation_recommended": true/false,
      "generation_method": "multi_agent_ultra_precision",
      "confidence_threshold": 0.9,
      "contamination_prevention": true
    }}
  }}

# STEP-LEVEL TRIGGER: Execute when query classification output received
triggers:
  - trigger_id: input_data_received
    class: nanobrain.core.trigger.DataUnitChangeTrigger
    data_unit: query_input
    event_type: "set"
    description: "Execute enhanced step when query classification result is received"

# Quality assurance settings
quality_assurance:
  enable_confidence_validation: true
  enable_taxonomic_cross_validation: true
  enable_contamination_detection: true
  manual_review_threshold: 0.85
  strict_filtering_mode: true

# Performance monitoring
performance_monitoring:
  track_confidence_metrics: true
  track_synonym_quality: true
  track_validation_success_rate: true
  enable_detailed_logging: true
  track_contamination_prevention: true

# Error handling
error_handling:
  reject_low_confidence: true
  contamination_tolerance: 0.0
  fallback_mode: "reject"  # No fallbacks for ultra-precision
  log_all_rejections: true 