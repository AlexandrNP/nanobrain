name: "ChatbotViralWorkflow"
description: "Intelligent chatbot integration with enhanced viral annotation backend"
version: "5.1.0"  # Compliance update version
execution_strategy: "event_driven"
error_handling: "continue"
enable_monitoring: true
workflow_directory: "nanobrain/library/workflows/chatbot_viral_integration"

# Existing configuration preserved
enable_progress_reporting: true
progress_batch_interval: 3.0
progress_collapsed_by_default: true
progress_show_technical_errors: true
progress_preserve_session_history: true
max_parallel_steps: 3
step_timeout: 120.0
retry_attempts: 2
retry_delay: 1.0
validate_graph: true
allow_cycles: false
require_connected_graph: true

# Data directory configuration (existing)
data_directory: "../../data"
cache_directory: "../../data/cache"
csv_file_path: "../../data/alphavirus_analysis/BVBRC_genome_alphavirus.csv"

# WORKFLOW-LEVEL INPUT/OUTPUT DATA UNITS (preserved)
input_data_units:
  user_query:
    class: "nanobrain.core.data_unit.DataUnitMemory"
    name: "user_query"
    description: "User query input for enhanced chatbot viral integration"
    persistent: false

output_data_units:
  chatbot_response:
    class: "nanobrain.core.data_unit.DataUnitMemory"
    name: "chatbot_response"
    description: "Complete chatbot response with enhanced viral analysis"
    persistent: false

# UPDATED: Dict-based steps format (was list-based)
steps:
  query_classification:
    class: "nanobrain.library.workflows.chatbot_viral_integration.steps.query_classification_step.QueryClassificationStep"
    config: "config/QueryClassificationStep/QueryClassificationStep.yml"
    name: "Query Classification"
    description: "Classify user queries and extract virus species using LLM agent"
    estimated_time: 2.0
  
  virus_name_resolution:
    class: "nanobrain.library.workflows.chatbot_viral_integration.steps.virus_name_resolution_step.EnhancedVirusNameResolutionStep"
    config: "config/VirusNameResolutionStep/VirusNameResolutionStep.yml"
    name: "Enhanced Virus Name Resolution"
    description: "Ultra-high-confidence virus synonym detection with multi-agent processing"
    estimated_time: 10.0
  
  viral_protein_analysis:
    class: "nanobrain.library.workflows.viral_protein_analysis.alphavirus_workflow.AlphavirusWorkflow"
    config: "../viral_protein_analysis/config/AlphavirusWorkflow.yml"
    name: "Enhanced Viral Protein Analysis Workflow"
    description: "Complete enhanced viral protein analysis workflow with ultra-precision validation"
    estimated_time: 1800.0
    timeout: 1800.0
  
  conversational_response:
    class: "nanobrain.library.workflows.chatbot_viral_integration.steps.conversational_response_step.ConversationalResponseStep"
    config: "config/ConversationalResponseStep/ConversationalResponseStep.yml"
    name: "Conversational Response"
    description: "Generate intelligent conversational responses about viruses"
    estimated_time: 5.0
  
  response_formatting:
    class: "nanobrain.library.workflows.chatbot_viral_integration.steps.response_formatting_step.ResponseFormattingStep"
    config: "config/ResponseFormattingStep/ResponseFormattingStep.yml"
    name: "Response Formatting"
    description: "Format enhanced analysis results for chatbot response"
    estimated_time: 5.0

# UPDATED: Dict-based links format (was list-based) - Framework compliant class+config pattern
links:
  workflow_to_query_classification:
    class: "nanobrain.core.link.DirectLink"
    config:
      name: "workflow_to_query_classification"
      link_type: "direct"
      source: "user_query"
      target: "query_classification.user_query"
      description: "Route user input to query classification"
      enable_logging: true
  
  classification_to_enhanced_virus_resolution:
    class: "nanobrain.core.link.ConditionalLink"
    config:
      name: "classification_to_enhanced_virus_resolution"
      link_type: "conditional"
      source: "query_classification.extraction_result"
      target: "virus_name_resolution.extraction_result"
      condition:
        field: "routing_decision"
        operator: "equals"
        value: "virus_name_resolution"
      description: "Route classification result to enhanced virus resolution for ultra-precision analysis"
      enable_logging: true
  
  enhanced_virus_resolution_to_viral_analysis:
    class: "nanobrain.core.link.ConditionalLink"
    config:
      name: "enhanced_virus_resolution_to_viral_analysis"
      link_type: "conditional"
      source: "virus_name_resolution.virus_info"
      target: "viral_protein_analysis.workflow_input"
      condition:
        field: "analysis_type"
        operator: "in"
        values: ["pssm", "protein_analysis"]
      description: "Route ultra-high-confidence synonyms to enhanced viral protein analysis"
      enable_logging: true
  
  enhanced_viral_analysis_to_response_formatting:
    class: "nanobrain.core.link.DirectLink"
    config:
      name: "enhanced_viral_analysis_to_response_formatting"
      link_type: "direct"
      source: "viral_protein_analysis.workflow_output"
      target: "response_formatting.analysis_input"
      description: "Route enhanced viral analysis results to response formatting"
      enable_logging: true
  
  formatted_enhanced_analysis_to_workflow:
    class: "nanobrain.core.link.DirectLink"
    config:
      name: "formatted_enhanced_analysis_to_workflow"
      link_type: "direct"
      source: "response_formatting.formatted_response"
      target: "chatbot_response"
      description: "Route formatted enhanced analysis response to workflow output"
      enable_logging: true
  
  classification_to_conversational_response:
    class: "nanobrain.core.link.ConditionalLink"
    config:
      name: "classification_to_conversational_response"
      link_type: "conditional"
      source: "query_classification.extraction_result"
      target: "conversational_response.query_input"
      condition:
        field: "routing_decision"
        operator: "equals"
        value: "conversational_response"
      description: "Route classification result to conversational response"
      enable_logging: true
  
  conversational_to_response_formatting:
    class: "nanobrain.core.link.DirectLink"
    config:
      name: "conversational_to_response_formatting"
      link_type: "direct"
      source: "conversational_response.response_data"
      target: "response_formatting.response_input"
      description: "Route conversational response to formatting"
      enable_logging: true
  
  formatted_conversational_to_workflow:
    class: "nanobrain.core.link.DirectLink"
    config:
      name: "formatted_conversational_to_workflow"
      link_type: "direct"
      source: "response_formatting.formatted_response"
      target: "chatbot_response"
      description: "Route formatted conversational response to workflow output"
      enable_logging: true

# ✅ UNIFIED TRIGGER FORMAT: List-based triggers (workflows ARE steps)
# ✅ SCOPE CORRECTED: Only workflow-level triggers referencing workflow-level data units
triggers:
  - trigger_id: "user_query_received"
    class: "nanobrain.core.trigger.DataUnitChangeTrigger"
    config:
      data_unit: "user_query"  # ✅ VALID: References workflow-level data unit
      event_type: "set"
      description: "Trigger when user query received"
      enable_logging: true

# ✅ SCOPE VIOLATIONS REMOVED: 
# - query_classification_completed → moved to QueryClassificationStep config
# - enhanced_virus_resolution_completed → moved to VirusNameResolutionStep config  
# - enhanced_viral_analysis_completed → moved to viral_protein_analysis step config

# Existing execution configuration (preserved)
execution:
  start_with: "query_classification"
  error_handling: "continue"
  parallel_execution: false
  timeout: 600.0

# Existing metadata (preserved)
workflow_metadata:
  framework_compliance: "from_config_mandatory"
  migration_status: "enhanced_ultra_precision_complete"
  integration_status: "enhanced_workflow_as_step_enabled"
  ultra_precision_support: "enabled"
  zero_contamination_guarantee: "enabled"
  last_updated: "2025-01-28"
  configuration_status: "enhanced_production_ready"
  notes: "Updated for framework compliance - Dict-based configuration format"
