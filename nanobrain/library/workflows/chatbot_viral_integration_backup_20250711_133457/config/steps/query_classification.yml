name: Query Classification
description: Extract virus species using LLM agent (NO hardcoded patterns)
class: QueryClassificationStep

# Step configuration
config:
  name: query_classification
  description: Extract virus species using LLM agent
  debug_mode: false
  enable_logging: true
  log_data_transfers: true

# Input data unit configuration - FIXED: Match workflow's data unit naming
input_configs:
  user_query:
    class: nanobrain.core.data_unit.DataUnitMemory
    name: user_query  # FIXED: Match the workflow data unit name
    description: User query input for virus species extraction
    persistent: false

# Output data unit configuration - FIXED: Match workflow's expected output
output_config:
  class: nanobrain.core.data_unit.DataUnitMemory
  name: extracted_query_data  # FIXED: Match the workflow data unit name
  description: Virus species extraction result with routing decision
  persistent: false

# FIXED: Generic trigger configuration for event-driven execution with data unit binding
trigger_config:
  trigger_type: data_updated
  name: input_data_received_trigger
  description: "Trigger when input data is received"
  data_units: ["user_query"]  # BIND trigger to specific input data unit

# LLM agent configuration - using mandatory from_config pattern
extraction_agent:
  class: SimpleAgent
  name: virus_extraction_agent
  model: "gpt-4"
  temperature: 0.1
  max_tokens: 100
  timeout: 30
  description: "Agent for extracting virus species from user queries"
  
# Prompt template for virus species extraction (NO hardcoded patterns)
virus_extraction_prompt: |
  Analyze the following user query and extract any virus species mentioned:
  
  Query: "{user_query}"
  
  Extract virus species names if present. Return JSON format:
  {{
    "virus_species": "exact virus species name or null if none found",
    "confidence": 0.0-1.0,
    "reasoning": "brief explanation"
  }}
  
  Examples of virus species: Chikungunya virus, Eastern equine encephalitis virus, Zika virus
  
  Return only the JSON response.

# Routing configuration - determines next step based on query type
routing_config:
  default_route: "conversational_response"
  virus_analysis_route: "virus_name_resolution"
  confidence_threshold: 0.7

# Output format specification
output_format:
  virus_species: "str or null"
  confidence: "float 0.0-1.0"
  routing_decision: "str (virus_name_resolution or conversational_response)"
  reasoning: "str"
