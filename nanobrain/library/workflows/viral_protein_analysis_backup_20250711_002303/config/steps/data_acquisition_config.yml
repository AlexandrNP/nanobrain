name: BV-BRC Data Acquisition
description: Download genomes, filter by size, extract proteins, get sequences and annotations
estimated_time: 120.0
class: nanobrain.library.workflows.viral_protein_analysis.steps.data_acquisition_step.BVBRCDataAcquisitionStep
step_type: simple
debug_mode: false
enable_logging: true

# Framework settings
debug_mode: false
enable_logging: true

# Data directory configuration - configurable paths for data storage and caching
data_directory: "data"  # Base data directory
bvbrc_cache_directory: "data/bvbrc_cache"  # BV-BRC specific cache directory
cache_directory: "data/cache"  # General cache directory

# Step-specific configuration
target_genus: Viral species
min_genome_length: 1000
max_genome_length: 20000
genome_batch_size: 100
md5_batch_size: 50

# MOVED FROM WORKFLOW: Tool configuration at step level
tools:
  bv_brc_tool:
    class: nanobrain.library.tools.bioinformatics.bv_brc_tool.BVBRCTool
    config_file: ../../tools/bv_brc_tool.yml
    tool_config:
      base_url: "https://www.bvbrc.org/api"
      timeout: 300
      max_retries: 3

# UPDATED: Input data unit with class field
input_configs:
  virus_input:
    class: nanobrain.core.data_unit.DataUnitMemory
    name: virus_input
    description: "Virus species and analysis parameters"
    persistent: false

# UPDATED: Output data unit with class field
output_config:
  class: nanobrain.core.data_unit.DataUnitFile
  name: fasta_and_annotations
  description: "FASTA file with protein annotations"
  persistent: true
  file_path: "data/bvbrc_cache/proteins.fasta"

# Tool card format specification (corrected data flow format)
output_format:
  virus_species: str
  annotated_fasta: str
  protein_annotations: "List[Dict[str, Any]]"
  unique_proteins: "List[Dict[str, Any]]"
  protein_sequences: "List[Dict[str, Any]]"
  filtered_genomes: "List[Dict[str, Any]]"
  unique_protein_products: "List[str]"

logical_steps_covered:
- 1
- 2
- 3
- 4
- 5
- 6
- 7
step_description_detailed: 'This step combines 7 logical workflow steps:
  1. Download viral genomes from BV-BRC
  2. Filter genomes by size constraints
  3. Extract protein sequences from genomes
  4. Validate sequence integrity
  5. Get protein annotations from BV-BRC
  6. Organize genome metadata
  7. Prepare data for annotation mapping '

# Framework metadata - Phase 3 updated
_metadata:
  last_updated: '2025-06-23T22:30:00.000000'
  updated_by: Phase3_tool_integration_enhancement
  migration_version: 1.0.0
  uses_modular_config: true
  config_type: "step"
  framework_version: "1.0.0"
  compliance_level: "full"
  tool_integration: "from_config"
