# UPDATED: Align with from_config pattern requirements
name: bv_brc_data_acquisition
description: Acquire and filter viral genome data from BV-BRC database
class: nanobrain.library.workflows.viral_protein_analysis.steps.bv_brc_data_acquisition_step.BVBRCDataAcquisitionStep

# Step configuration
config:
  estimated_time: 1200.0
  timeout: 1200.0
  debug_mode: false
  enable_logging: true
  csv_file_path: "data/viral_analysis/BVBRC_genome_viral.csv"  # CSV data for validation

# SynonymDetection agent configuration (nested pattern)
synonym_detection_agent:
  config_file: "nanobrain/library/workflows/viral_protein_analysis/config/agents/synonym_detection_agent.yml"

# External tool configuration (pure config - no hardcoding)
tools:
  bv_brc_tool:
    enabled: true
    config_file: "nanobrain/library/tools/bioinformatics/config/bv_brc_tool.yml"

# Event-driven data units (step-level)
input_data_units:
  virus_input:
    class: nanobrain.core.data_unit.DataUnitMemory
    name: virus_input
    description: "Virus species and analysis parameters"
    persistent: false

output_data_units:
  fasta_and_annotations:
    class: nanobrain.core.data_unit.DataUnitFile
    name: fasta_and_annotations
    description: "FASTA file with protein annotations"
    persistent: true
    file_path: "data/bvbrc_cache/proteins.fasta"

# Step-level triggers for event-driven execution
triggers:
  - trigger_id: input_data_received
    class: nanobrain.core.trigger.DataUnitChangeTrigger
    data_unit: virus_input
    description: "Execute step when input data is received"
    event_type: "set"

# Data acquisition configuration (configurable - no hardcoding)
acquisition_config:
  min_genome_length: 8000
  max_genome_length: 15000
  batch_size: 100
  enable_filtering: true
  progressive_scaling: true

# Cache configuration (configurable - no hardcoding)
cache_config:
  enable_caching: true
  cache_directory: "data/bvbrc_cache"
  cache_ttl_hours: 24
  virus_specific: true
