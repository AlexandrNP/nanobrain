# Example Agent Configuration with MCP Support
# This shows how to configure an agent to use MCP servers

agent:
  name: "mcp_enabled_agent"
  description: "Conversational agent with MCP tool support"
  model: "gpt-4"
  temperature: 0.7
  max_tokens: 2000
  
  # Agent-specific settings
  system_prompt: |
    You are a helpful AI assistant with access to external tools through MCP (Model Context Protocol).
    You can use various tools to help users with calculations, weather information, and other tasks.
    Always explain what tools you're using and why.

  # Tool configuration
  tools:
    enabled: true
    max_parallel_calls: 3
    timeout: 30.0
    
  # MCP configuration reference
  mcp:
    # Path to MCP configuration file (relative to this config file)
    config_path: "mcp_config.yaml"
    
    # Override specific settings for this agent
    client_overrides:
      auto_discover_tools: true
      fail_on_server_error: false
      log_tool_calls: true
    
    # Enable/disable specific servers for this agent
    server_overrides:
      demo_server:
        enabled: true
      authenticated_server:
        enabled: false  # Disable for this agent
      local_dev:
        enabled: true   # Enable for development

# Workflow configuration (if using with workflows)
workflow:
  name: "mcp_chat_workflow"
  description: "Chat workflow with MCP tool support"
  
  # Data units for workflow state
  data_units:
    - name: "user_input"
      class: nanobrain.core.data_unit.DataUnitMemory
      description: "User input messages"
    
    - name: "agent_responses"
      class: nanobrain.core.data_unit.DataUnitMemory 
      description: "Agent responses with tool usage"
  
  # Steps in the workflow
  steps:
    - name: "mcp_agent_step"
      type: "conversational_agent"
      agent_config_ref: "agent"  # Reference to agent config above
      
  # Triggers for workflow execution
  triggers:
    - name: "user_message_trigger"
      type: "data_updated"
      data_unit: "user_input"
      
  # Links between components
  links:
    - from: "user_input"
      to: "mcp_agent_step"
      type: "direct"
    
    - from: "mcp_agent_step"
      to: "agent_responses"
      type: "direct" 